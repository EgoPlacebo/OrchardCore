@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Extensions
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Html
@using Microsoft.Extensions.Options
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer T
@inject Microsoft.Extensions.Options.IOptions<IdentityOptions> IdentityOptions
@inject OrchardCore.Modules.IClock Clock
@model RegisterUserViewModel

<h1>@T["Welcome to the SaaS module"]</h1>

<form asp-action="Index" method="post">
    <fieldset class="form-group">
        <label asp-for="Email">@T["Email"]</label>
        <input class="form-control" asp-for="Email" />
    </fieldset>

    <fieldset class="form-group">
        <label asp-for="SiteName">@T["Site Name"]</label>
        <input class="form-control" asp-for="SiteName" />
    </fieldset>

    <fieldset class="form-group">
        <label asp-for="UserName">@T["UserName"]</label>
        <input class="form-control" asp-for="UserName" />
    </fieldset>

    <button type="submit" class="btn btn-primary">@T["Submit"]</button>
</form>

@* @{
    var defaultRecipe = Model.Recipes.FirstOrDefault(x => x.Name == Model.RecipeName) ?? Model.Recipes.FirstOrDefault();
    var localTimeZone = Clock.GetSystemTimeZone();
    var passwordOptions = new HtmlContentBuilder();
    var options = IdentityOptions.Value;
    IHtmlContent separator = HtmlString.Empty;
    string passwordRegex = "";

    if (options.Password.RequireNonAlphanumeric)
    {
        passwordOptions.AppendHtml(separator).AppendHtml(T["one non-alphanumeric"]);
        separator = new HtmlString(", ");
        passwordRegex += @"(?=.*[^A-Za-z0-9])";
    }

    if (options.Password.RequireUppercase)
    {
        passwordOptions.AppendHtml(separator).AppendHtml(T["one uppercase"]);
        separator = new HtmlString(", ");
        passwordRegex += @"(?=.*[A-Z])";
    }

    if (options.Password.RequireLowercase)
    {
        passwordOptions.AppendHtml(separator).AppendHtml(T["one lowercase"]);
        separator = T[", "];
        passwordRegex += @"(?=.*[a-z])";
    }

    if (options.Password.RequireDigit)
    {
        passwordOptions.AppendHtml(separator).AppendHtml(T["one digit"]);
        separator = new HtmlString(", ");
        passwordRegex += @"(?=.*[0-9])";
    }

    if (separator != HtmlString.Empty)
    {
        separator = T[" and "];
    }

    passwordOptions.AppendHtml(separator).AppendHtml(T["{0} characters in total", options.Password.RequiredLength]);
    passwordRegex += $".{{{options.Password.RequiredLength},}}";

    if (options.Password.RequiredUniqueChars > 1)
    {
        passwordOptions.AppendHtml(T[", with {0} unique characters", options.Password.RequiredUniqueChars]);
    }

    var passwordTooltip = T["Password must have at least {0}.", passwordOptions];
}
<h1>@T["Welcome to Netway's CMS SaaS"]</h1>
<h3>@T["Powered by Orchard Core"]</h3>
<hr />
<p class="lead text-center">@T["Please answer a few questions to configure your site."]</p>
<hr />
@if (defaultRecipe == null)
{
    <div class="alert alert-danger" role="alert">
        <strong>@T["No recipes available."]</strong> @T["It is not possible to set up a site without a recipe."]
    </div>
}
<form asp-action="Index" method="post">
<div class="row mt-2">
    <div class="mb-3 col-md-4" asp-validation-class-for="SiteName">
        <div>
            <label asp-for="SiteName" class="form-label">@T["What is the name of your site?"]</label>
            <input asp-for="SiteName" class="form-control" autofocus required />
            <span asp-validation-for="SiteName" class="text-danger"></span>
            <span class="text-muted form-text small">@T["This is used as the default title of your pages."]</span>
        </div>
    </div>
    <div class="mb-3 col-md-4">
        <input type="hidden" asp-for="RecipeName" required />
        <nav>
            <div asp-validation-class-for="RecipeName">
                <label asp-for="RecipeName" class="form-label">@T["Recipe"]</label>
                @if (defaultRecipe == null)
                {
                    <div id="noRecipes" class="dropdown disabled">
                        <button id="noRecipeButton" title="@T["No Recipes Available"]" class="btn btn-secondary dropdown-toggle disabled" type="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            @T["No Recipes Available"]
                        </button>
                    </div>
                }
                else
                {
                    <div id="recipes" class="dropdown">
                        <button id="recipeButton" title="@defaultRecipe.Description" class="btn btn-light dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            @defaultRecipe.DisplayName
                        </button>
                        <div class="dropdown-menu">
                            @foreach (var recipe in Model.Recipes.OrderBy(x => x.Name))
                            {
                                <a href="#" data-recipe-name="@recipe.Name" data-recipe-description="@recipe.Description" data-recipe-display-name="@recipe.DisplayName" class="dropdown-item">@recipe.DisplayName <span class="text-muted form-text small">@recipe.Description</span></a>
                            }
                        </div>
                    </div>
                }
            </div>
        </nav>
        <span class="text-muted form-text small">@T["Recipes allow you to setup your site with additional pre-configured options, features and settings out of the box."]</span>
    </div>
    <div class="mb-3 col-md-4" asp-validation-class-for="SiteTimeZone">
        <label asp-for="SiteTimeZone" class="form-label">@T["Default Time Zone"]</label>
        <select asp-for="SiteTimeZone" class="form-select">
            @foreach (var timeZone in Clock.GetTimeZones())
            {
                <option value="@timeZone.TimeZoneId" selected="@(timeZone.TimeZoneId == localTimeZone.TimeZoneId)">
                    @timeZone
                </option>
            }
        </select>
        <span asp-validation-for="SiteTimeZone"></span>
        <span class="text-muted form-text small">@T["Determines the default time zone used when displaying and editing dates and times."]</span>
    </div>
    <div class="mb-3 col-md-4">
            <fieldset class="form-group">
                <label asp-for="Handle">@T["Handle"]</label>
                <input class="form-control" asp-for="Handle" />
            </fieldset>
        </div>
</div>

<fieldset>
    <legend>@T["Super User"]</legend>
    <span class="text-muted form-text small">@T["The super user has all the rights. It should be used only during Setup and for disaster recovery."]</span>
    <div class="row">
        <div class="mb-3 col-md-6" asp-validation-class-for="UserName">
            <label asp-for="UserName" class="form-label" placeholder="Administrator">@T["User name"]</label>
            <input asp-for="UserName" class="form-control" required />
            <span asp-validation-for="UserName" class="text-danger"></span>
        </div>
        <div class="mb-3 col-md-6" asp-validation-class-for="Email">
            <label asp-for="Email" class="form-label">@T["Email"]</label>
            <input asp-for="Email" class="form-control" type="email" required />
            <span asp-validation-for="Email" class="text-danger">@T["The email is invalid."]</span>
        </div>
    </div>
    <div class="row">
        <div class="mb-3 col-md-6" asp-validation-class-for="Password">
            <label asp-for="Password" class="form-label">@T["Password"]</label>
            <div class="input-group">
                <input asp-for="Password" class="form-control" autocomplete="new-password" data-bs-toggle="popover" data-bs-placement="top" data-trigger="focus" data-title="@T["Password strength"]" data-bs-content="@passwordTooltip" required pattern="@passwordRegex" />
                <button tabindex="-1" class="btn btn-secondary" type="button" id="togglePassword"><i class="icon fa fa-eye"></i></button>
            </div>
            <div id="passwordStrength"></div>
            <span asp-validation-for="Password" class="text-danger"></span>
        </div>

        <div class="mb-3 col-md-6" asp-validation-class-for="PasswordConfirmation">
            <label asp-for="PasswordConfirmation" class="form-label">@T["Password Confirmation"]</label>
            <div class="input-group">
                <input asp-for="PasswordConfirmation" class="form-control" autocomplete="new-password" title="@passwordTooltip" required pattern="@passwordRegex" />
                <button tabindex="-1" class="btn btn-secondary" type="button" id="togglePasswordConfirmation"><i class="icon fa fa-eye"></i></button>
            </div>
            <span asp-validation-for="PasswordConfirmation" class="text-danger"></span>
        </div>
    </div>
</fieldset>
    <div class="row">
        <div class="mb-3 col-md-4">
            <input type="hidden" asp-for="Secret" value="@Model.Secret" />
            <button type="submit" class="btn btn-primary">@T["Submit"]</button>
        </div>
    </div>
</form>

<script src="~/OrchardCore.Resources/Scripts/jquery.min.js"></script>
<script>
    // Refresh the recipe description
    $(document).ready(console.log("foo"));
    if (window.jQuery) { console.log("yay for jquery"); }
    $("#recipes > div > a").on('click', function () {
        refreshDescription($(this));
    });

    function refreshDescription(target) {
        var recipeName = $(target).data("recipe-name");
        var recipeDisplayName = $(target).data("recipe-display-name");
        var recipeDescription = $(target).data("recipe-description");
        $("#recipeButton").text(recipeDisplayName);
        $("#RecipeName").val(recipeName);
        $("#recipeButton").attr("title", recipeDescription);
        $("#recipeButton").focus();
    }

</script> *@